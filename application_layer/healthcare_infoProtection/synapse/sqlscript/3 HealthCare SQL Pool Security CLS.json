{
	"name": "3 HealthCare SQL Pool Security CLS",
	"properties": {
		"folder": {
			"name": "healthcare_information_protection/analysis"
		},
		"content": {
			"query": "/******Important – Do not use in production, for demonstration purposes only – please review the legal notices by clicking the following link****/\n---DisclaimerLink:  https://healthcaredemoapp.azurewebsites.net/#/disclaimer\n---License agreement: https://github.com/microsoft/Azure-Analytics-and-AI-Engagement/blob/main/HealthCare/License.md\n/*  Column-level security feature in Azure Synapse simplifies the design and coding of security in application. \n    It ensures column level security by restricting column access to protect sensitive data. */\n\n--Step 1: Let us see how this feature in Azure Synapse works. Before that let us have a look at the Mkt_CampaignAnalyticLatest table. \nselect  Top 100 * from hpi.Mkt_CampaignAnalyticLatest\n\n/*  Consider a scenario where there are two users. \n    A ChiefOperatingManager, who is an authorized  personnel with access to all the information in the database \n    and a CareManager, to whom only required information should be presented.*/\n\n-- Step:2 We look for the names “ChiefOperatingManager” and “CareManagerMiami” present in the Datawarehouse. \nSELECT Name as [User] FROM sys.sysusers WHERE name IN (N'ChiefOperatingManager',N'CareManagerMiami')\n\n-- Step:3 Now let us enforcing column level security for the CareManagerMiami. \n/*  Let us see how.\n    The Mkt_CampaignAnalyticLatest table in the warehouse has information like Region, Country,Campaign_Name, Revenue_Target , and Revenue.\n    Of all the information, Revenue generated from every Mkt_CampaignAnalyticLatest is a classified one and should be hidden from CareManagerMiami.\n    To conceal this information, we execute the following query: */\n\nGRANT SELECT ON hpi.Mkt_CampaignAnalyticLatest ([Region],[Country],[Campaign_Name],[Revenue_Target]) TO CareManagerMiami;\n-- This provides CareManagerMiami access to all the columns of the Mkt_CampaignAnalyticLatest table but Revenue.\n-- Step:4 Then, to check if the security has been enforced, we execute the following query with current User As 'CareManagerMiami'\nEXECUTE AS USER ='CareManagerMiami'\nselect * from hpi.Mkt_CampaignAnalyticLatest\n---\nEXECUTE AS USER ='CareManagerMiami'\nselect [Region],[Country],[Campaign_Name],[Revenue_Target] from hpi.Mkt_CampaignAnalyticLatest\n\n/*  And look at that, when the user logged in as CareManagerMiami tries to view all the columns from the Mkt_CampaignAnalyticLatest table, \n    he is prompted with a ‘permission denied error’ on Revenue column.*/\n\n-- Step:5 Whereas, the ChiefOperatingManager of the company should be authorized with all the information present in the warehouse.To do so, we execute the following query.\nRevert;\nGRANT SELECT ON hpi.Mkt_CampaignAnalyticLatest TO ChiefOperatingManager;  --Full access to all columns.\n\n-- Step:6 Let us check if our ChiefOperatingManager user can see all the information that is present. Assign Current User As 'ChiefOperatingManager' and the execute the query\nEXECUTE AS USER ='ChiefOperatingManager'\nselect * from Mkt_CampaignAnalyticLatest\n\n-------------------------------------------------------------\nRevert;",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "syndpdev00006",
				"poolName": "syndpdev00006"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}