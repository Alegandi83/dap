{
	"name": "6 Set up Script RLS DDM",
	"properties": {
		"folder": {
			"name": "healthcare_information_protection/analysis"
		},
		"content": {
			"query": "/******Important – Do not use in production, for demonstration purposes only – please review the legal notices by clicking the following link****/\n---DisclaimerLink:  https://healthcaredemoapp.azurewebsites.net/#/disclaimer\n---License agreement: https://github.com/microsoft/Azure-Analytics-and-AI-Engagement/blob/main/HealthCare/License.md\n\n/* **DISCLAIMER**\nBy accessing this code, you acknowledge the code is made available for presentation and demonstration purposes only and that the code: (1) is not subject to SOC 1 and SOC 2 compliance audits; (2) is not designed or intended to be a substitute for the professional advice, diagnosis, treatment, or judgment of a certified financial services professional; (3) is not designed, intended or made available as a medical device; and (4) is not designed or intended to be a substitute for professional medical advice, diagnosis, treatment or judgement. Do not use this code to replace, substitute, or provide professional financial advice or judgment, or to replace, substitute or provide medical advice, diagnosis, treatment or judgement. You are solely responsible for ensuring the regulatory, legal, and/or contractual compliance of any use of the code, including obtaining any authorizations or consents, and any solution you choose to build that incorporates this code in whole or in part. */\n\nselect  * from [dbo].[HospitalEmpPIIData] \n\n/*****************************************************************************************************************/\n/*****************************************************************************************************************/\n\n-- 2. Setting up Row Level Security on State\n--Create User and Grant Select Permissions\n\n\nIf Not Exists (SELECT Name as [User] FROM sys.sysusers WHERE name='demo-healthcare-user@cloudlabsai.ms') \nCREATE USER [demo-healthcare-user@cloudlabsai.ms] FROM EXTERNAL PROVIDER\nGRANT SELECT ON dbo.HospitalEmpPIIData TO [demo-healthcare-user@cloudlabsai.ms] \nEXEC sp_addrolemember 'db_datareader', 'demo-healthcare-user@cloudlabsai.ms'\n\nIf Not Exists (SELECT Name as [User] FROM sys.sysusers WHERE name='demo-healthcare-user-02@cloudlabsai.ms') \nCREATE USER [demo-healthcare-user-02@cloudlabsai.ms] FROM EXTERNAL PROVIDER\nGRANT SELECT ON dbo.HospitalEmpPIIData TO [demo-healthcare-user-02@cloudlabsai.ms] \nEXEC sp_addrolemember 'db_datareader', 'demo-healthcare-user-02@cloudlabsai.ms'\n\n\n--Grant Impersonate permissions for AAD login \nGRANT IMPERSONATE ON USER::[demo-healthcare-user-02@cloudlabsai.ms] TO [demo-healthcare-user@cloudlabsai.ms];\nGRANT IMPERSONATE ON USER::[demo-healthcare-user@cloudlabsai.ms] TO [demo-healthcare-user-02@cloudlabsai.ms];\n\n--REVOKE CONTROL ON USER::[demo-healthcare-user@cloudlabsai.ms] FROM HospitalEmpPIIData;\n--Create roles as values present in column \n--CREATE ROLE [DE]; --This role already exists for SQL login\n\nIf Not EXISTS (\nSELECT DP1.name AS DatabaseRoleName FROM sys.database_role_members AS DRM  \nRIGHT OUTER JOIN sys.database_principals AS DP1 ON DRM.role_principal_id = DP1.principal_id  \nLEFT OUTER JOIN sys.database_principals AS DP2 ON DRM.member_principal_id = DP2.principal_id  \nWHERE DP1.type = 'R' and DP1.Name in ('Miami','NY','PA') )\n CREATE ROLE [CA];\n\nIf Not EXISTS (\nSELECT DP1.name AS DatabaseRoleName FROM sys.database_role_members AS DRM  \nRIGHT OUTER JOIN sys.database_principals AS DP1 ON DRM.role_principal_id = DP1.principal_id  \nLEFT OUTER JOIN sys.database_principals AS DP2 ON DRM.member_principal_id = DP2.principal_id  \nWHERE DP1.type = 'R' and DP1.Name in ('CA','NY','PA') ) \nCREATE ROLE [PA];\n\nIf Not EXISTS (\nSELECT DP1.name AS DatabaseRoleName FROM sys.database_role_members AS DRM  \nRIGHT OUTER JOIN sys.database_principals AS DP1 ON DRM.role_principal_id = DP1.principal_id  \nLEFT OUTER JOIN sys.database_principals AS DP2 ON DRM.member_principal_id = DP2.principal_id  \nWHERE DP1.type = 'R' and DP1.Name in ('CA','NY','PA') )\nCREATE ROLE [NY];\n    \n\n-- Add AAD users to roles      \nEXEC sp_addrolemember 'NY', 'demo-healthcare-user@cloudlabsai.ms';\nEXEC sp_addrolemember 'PA', 'demo-healthcare-user@cloudlabsai.ms';\nEXEC sp_addrolemember 'CA', 'demo-healthcare-user@cloudlabsai.ms';\nEXEC sp_addrolemember 'CA', 'demo-healthcare-user-02@cloudlabsai.ms';\n\nCREATE FUNCTION dbo.fn_securitypredicate_rolemember(@State AS sysname)  \nRETURNS TABLE  WITH SCHEMABINDING  \nAS  \nRETURN SELECT 1 AS fn_securitypredicate_result   \nWHERE \n    (@State = 'NY' and IS_ROLEMEMBER('NY') = 1) \n    or (@State = 'CA' and IS_ROLEMEMBER('CA') = 1) \n    or (@State = 'PA' and IS_ROLEMEMBER('PA') = 1)\n    or IS_ROLEMEMBER('dbo') = 1; \n\n--Create Security Policy to filter rows based on column values \nCREATE SECURITY POLICY StateFilter_rolemember \nADD FILTER PREDICATE dbo.fn_securitypredicate_rolemember([state])   \nON  dbo.HospitalEmpPIIData WITH (STATE = ON);        \n\n\nALTER SECURITY POLICY StateFilter_rolemember  \nWITH (STATE = OFF);\nDROP SECURITY POLICY StateFilter_rolemember; \nDROP FUNCTION Security.fn_securitypredicate_rolemember\nDROP SCHEMA Security;\n\n/*****************************************************************************************************************/\n-- 3. Setting up Dynamic Data Masking on EmailId column of dbo.HospitalEmpPIIData\n\n        ALTER TABLE dbo.HospitalEmpPIIData  \n        ALTER COLUMN Email varchar(100) MASKED WITH (FUNCTION = 'Email()'); \n\n        ALTER TABLE dbo.HospitalEmpPIIData  \n        ALTER COLUMN SSN varchar(100) MASKED WITH (FUNCTION = 'partial(0,\"XXX-XX\",2)'); \n\n/********************  Column Level Encryption Set Up ******************/\n\t--Note:\n\t--Once CLE is enabled on SQL Pool, login with AAD login and execute all commands as provided below.\n\t--When executing with Synapse Studio, open symmetric key and select statement should be executed as a single query by selecting it.\n\n/*************************************************************************************************/\n\n\n--If your database does not already have a database master key, create one by executing the following statement providing your password else alter key\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'eT!ePieU*RV@' --master key password\n--ALTER MASTER KEY REGENERATE WITH ENCRYPTION BY PASSWORD = 'eT!ePieU*RV@' --alter master key password\n\n--Verify Master Key is created\nSELECT * FROM sys.symmetric_keys\n\n--Grant control permisisons on database and create certificate permissions to user\ngrant control on database::HealthCareDW to [demo-healthcare-user@cloudlabsai.ms]\ngrant create certificate to [demo-healthcare-user@cloudlabsai.ms]\n\n--Create a new certificate with date options\nCREATE CERTIFICATE Cert1 \n\tencryption by password = 'm9p!T!zJN9#N' --cert password\n\tWITH SUBJECT = 'CLE Cert',--cert subject\n\tSTART_DATE = '20200512', \n\tEXPIRY_DATE = '20400512'\n--Verify cert creation\nSELECT * FROM sys.certificates\n\n--Create a new asymmetric key\nCREATE ASYMMETRIC KEY Akey1\n\tWITH ALGORITHM = RSA_3072\n\tENCRYPTION BY PASSWORD = '$T62uDCKP$iq' --asymmetric key password\n--Verify asymmetric key creation\nSELECT * FROM sys.asymmetric_keys\n\n--Create symmetric key with encryption by certificate, password, and asymmetric key\nCREATE SYMMETRIC KEY Key1\n\tWITH \n\tKEY_SOURCE = 'key source',\n\tIDENTITY_VALUE = 'identity value',\n\tALGORITHM = AES_192\n\tENCRYPTION BY certificate Cert1, asymmetric key Akey1, password = 'Vhqiv4SyW$j7' --symmetric key password\n\n\n\n/************* for wwi.HospitalEmpPIIData *******************/\n\n\n---Create a new table with or alter a table to add a column for the encrypted data\n\nALTER TABLE [dbo].[HospitalEmpPIIData] ADD SSN_encrypted varbinary(128)\n\n--Open the symmetric key as a first step to encrypting the column\nOPEN SYMMETRIC KEY Key1 DECRYPTION by CERTIFICATE Cert1 WITH password = 'm9p!T!zJN9#N' --cert password\n\n--Verify the key is open\n--Select * from sys.openkeys\n\n--Encrypt the column data with the symmetric key\nUPDATE [dbo].[HospitalEmpPIIData] SET SSN_encrypted = convert(varbinary(128), ENCRYPTBYKEY(Key_Guid('Key1'), SSN)) \n--Verify the column data is encrypted\nSelect * from [dbo].[HospitalEmpPIIData] where Id<50\n\n\n-- To validate encryption and decryption\nOPEN SYMMETRIC KEY Key1 DECRYPTION by CERTIFICATE Cert1 WITH password = 'm9p!T!zJN9#N' --cert password\n--Decrypt the column data\nSELECT SSN_encrypted, CONVERT(NVARCHAR, DECRYPTBYKEY(SSN_Encrypted)) AS [SSN_decrypted] FROM [wwi].[HospitalEmpPIIData]\n--Close the symmetric key\nCLOSE SYMMETRIC KEY Key1\n\n\n--drop original ssn column\nALTER TABLE [wwi].[HospitalEmpPIIData] drop column SSN;\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "syndpag83datadev",
				"poolName": "syndpag83datadev"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}