{
	"name": "Hpi Campaign Analytics DataPrep",
	"properties": {
		"folder": {
			"name": "hpi_spk_pool"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "synspdev00006",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0cf7fa14-8f62-4472-9673-12d4da6f70ba"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/272f5f06-6693-48ae-975b-b5c7553539c2/resourceGroups/ag83-00006-dev-rg/providers/Microsoft.Synapse/workspaces/ag83-syws-dev-00006/bigDataPools/synspdev00006",
				"name": "synspdev00006",
				"type": "Spark",
				"endpoint": "https://ag83-syws-dev-00006.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synspdev00006",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"source": [
					"## Notebook Sample\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\n",
					"data_path = spark.read.load('abfss://hpi@ag83stdev00006.dfs.core.windows.net/Campaign_Analytics/hpi.Campaign_Analytics.csv'\n",
					", format='csv'\n",
					", header=True\n",
					")\n",
					"display(data_path.limit(10))"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"source": [
					"## Load into Pandas and Perform Cleansing Operations\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"from pyspark.sql.functions import *\n",
					"from pyspark.sql.types import *\n",
					"\n",
					"import numpy as np\n",
					"\n",
					"pd_df = data_path.select(\"*\").toPandas()\n",
					"\n",
					"# 1. Remove '$' symbol and convert datatype to float\n",
					"pd_df['Revenue']= pd_df['Revenue'].replace('[\\$,]', '', regex=True).astype(float)\n",
					"pd_df['Revenue_Target']= pd_df['Revenue_Target'].replace('[\\$,]', '', regex=True).astype(float)\n",
					"\n",
					"# 2. Replace null values with 0\n",
					"pd_df['Revenue'].fillna(value=0, inplace=True)\n",
					"pd_df['Revenue_Target'].fillna(value=0, inplace=True)\n",
					"\n",
					"# 3. Convert columns to Camel Case\n",
					"pd_df['Region'] = pd_df.Region.str.title()\n",
					"pd_df['Country'] = pd_df.Country.str.title()\n",
					"pd_df['Campaign_Name'] = pd_df.Campaign_Name.str.title()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"source": [
					"## Data Transformation - Calculate Revenue Variance\n",
					""
				]
			},
			{
				"cell_type": "code",
				"source": [
					"#Create new column\n",
					"pd_df['Revenue_Variance'] = pd_df['Revenue_Target'] - pd_df['Revenue']\n",
					"\n",
					"print(pd_df[1:5])"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"source": [
					"## Move data to Azure Data Lake Gen2\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import math\r\n",
					"import statistics\r\n",
					"import numpy as np\r\n",
					"import scipy.stats\r\n",
					"import pandas as pd"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"df = spark.createDataFrame(pd_df)\n",
					"df.show(5)\n",
					"\n",
					"(df\n",
					".coalesce(1)\n",
					".write.mode(\"overwrite\")\n",
					".option(\"header\", \"true\")\n",
					".format(\"com.databricks.spark.csv\")\n",
					".save('abfss://hpi@ag83stdev00006.dfs.core.windows.net/Campaign_Analytics_Result/hpi.Campaign_Analytics.csv')\n",
					")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Retrieve Result from Azure Data Lake Gen2"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://hpi@ag83stdev00006.dfs.core.windows.net/Campaign_Analytics_Result/hpi.Campaign_Analytics.csv', format='csv'\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 7
			}
		]
	}
}